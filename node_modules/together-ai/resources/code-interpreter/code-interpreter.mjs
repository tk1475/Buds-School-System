// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../../resource.mjs";
import * as SessionsAPI from "./sessions.mjs";
import { Sessions } from "./sessions.mjs";
export class CodeInterpreter extends APIResource {
    constructor() {
        super(...arguments);
        this.sessions = new SessionsAPI.Sessions(this._client);
    }
    /**
     * Executes the given code snippet and returns the output. Without a session_id, a
     * new session will be created to run the code. If you do pass in a valid
     * session_id, the code will be run in that session. This is useful for running
     * multiple code snippets in the same environment, because dependencies and similar
     * things are persisted between calls to the same session.
     */
    execute(body, options) {
        return this._client.post('/tci/execute', { body, ...options });
    }
}
CodeInterpreter.Sessions = Sessions;
//# sourceMappingURL=code-interpreter.mjs.map
import { APIResource } from "../resource.js";
import * as Core from "../core.js";
export declare class Jobs extends APIResource {
    /**
     * Get the status of a specific job
     */
    retrieve(jobId: string, options?: Core.RequestOptions): Core.APIPromise<JobRetrieveResponse>;
    /**
     * List all jobs and their statuses
     */
    list(options?: Core.RequestOptions): Core.APIPromise<JobListResponse>;
}
export interface JobRetrieveResponse {
    args: JobRetrieveResponse.Args;
    created_at: string;
    job_id: string;
    status: 'Queued' | 'Running' | 'Complete' | 'Failed';
    status_updates: Array<JobRetrieveResponse.StatusUpdate>;
    type: string;
    updated_at: string;
}
export declare namespace JobRetrieveResponse {
    interface Args {
        description?: string;
        modelName?: string;
        modelSource?: string;
    }
    interface StatusUpdate {
        message: string;
        status: string;
        timestamp: string;
    }
}
export interface JobListResponse {
    data: Array<JobListResponse.Data>;
}
export declare namespace JobListResponse {
    interface Data {
        args: Data.Args;
        created_at: string;
        job_id: string;
        status: 'Queued' | 'Running' | 'Complete' | 'Failed';
        status_updates: Array<Data.StatusUpdate>;
        type: string;
        updated_at: string;
    }
    namespace Data {
        interface Args {
            description?: string;
            modelName?: string;
            modelSource?: string;
        }
        interface StatusUpdate {
            message: string;
            status: string;
            timestamp: string;
        }
    }
}
export declare namespace Jobs {
    export { type JobRetrieveResponse as JobRetrieveResponse, type JobListResponse as JobListResponse };
}
//# sourceMappingURL=jobs.d.ts.map